{
  "_args": [
    [
      {
        "raw": "adonis-binding-resolver@https://registry.npmjs.org/adonis-binding-resolver/-/adonis-binding-resolver-1.0.1.tgz",
        "scope": null,
        "escapedName": "adonis-binding-resolver",
        "name": "adonis-binding-resolver",
        "rawSpec": "https://registry.npmjs.org/adonis-binding-resolver/-/adonis-binding-resolver-1.0.1.tgz",
        "spec": "https://registry.npmjs.org/adonis-binding-resolver/-/adonis-binding-resolver-1.0.1.tgz",
        "type": "remote"
      },
      "/home/gergi30/Asztal/home/school/alkfejl_bead/PhotoSpace"
    ]
  ],
  "_from": "adonis-binding-resolver@>=1.0.1 <2.0.0",
  "_id": "adonis-binding-resolver@1.0.1",
  "_inCache": true,
  "_location": "/adonis-binding-resolver",
  "_phantomChildren": {},
  "_requested": {
    "raw": "adonis-binding-resolver@https://registry.npmjs.org/adonis-binding-resolver/-/adonis-binding-resolver-1.0.1.tgz",
    "scope": null,
    "escapedName": "adonis-binding-resolver",
    "name": "adonis-binding-resolver",
    "rawSpec": "https://registry.npmjs.org/adonis-binding-resolver/-/adonis-binding-resolver-1.0.1.tgz",
    "spec": "https://registry.npmjs.org/adonis-binding-resolver/-/adonis-binding-resolver-1.0.1.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/",
    "/adonis-framework",
    "/adonis-lucid"
  ],
  "_resolved": "https://registry.npmjs.org/adonis-binding-resolver/-/adonis-binding-resolver-1.0.1.tgz",
  "_shasum": "0e5ef763388f667f0aafebb51fffede47c6feabd",
  "_shrinkwrap": null,
  "_spec": "adonis-binding-resolver@https://registry.npmjs.org/adonis-binding-resolver/-/adonis-binding-resolver-1.0.1.tgz",
  "_where": "/home/gergi30/Asztal/home/school/alkfejl_bead/PhotoSpace",
  "author": {
    "name": "adonisjs,amanvirk"
  },
  "bugs": {
    "url": "https://github.com/adonisjs/adonis-binding-resolver/issues"
  },
  "dependencies": {
    "node-exceptions": "^1.0.3"
  },
  "description": "Resolves a closure or adonis ioc container binding transparently",
  "devDependencies": {
    "adonis-fold": "^3.0.2",
    "chai": "^3.5.0",
    "co-mocha": "^1.1.3",
    "mocha": "^3.0.2",
    "standard": "^7.1.2"
  },
  "directories": {
    "test": "tests"
  },
  "homepage": "https://github.com/adonisjs/adonis-binding-resolver#readme",
  "keywords": [
    "adonis",
    "adonisjs",
    "adonis-ioc"
  ],
  "license": "MIT",
  "main": "index.js",
  "name": "adonis-binding-resolver",
  "optionalDependencies": {},
  "readme": "# Adonis Binding Resolver\n\nAdonis binding resolver is a thin module to validate, resolve and execute\nbindings attached as a closure or IoC container binding. \n\nFor example: A route handler can point to `closure` or reference to controller method.\n\n```javascript\nRoute.get('/', function * (request, response) {\n\n})\n\n// or \n\nRoute.get('/', 'HomeController.index')\n```\n\n\nNow manually parsing the 2nd argument can become a little gross as you have to take care of following things.\n\n1. Validate the argument to make sure it is a function or a string only.\n2. If 2nd argument is a function, make sure to execute it as a function.\n3. If it is a string, parse the string and fetch the right module and function of the string.\n4. Also make sure that string argument method has correct reference to the scope `this`.\n\nThis module takes care of all this for you.\n\n## Validate Binding\n```javascript\nconst Resolver = require('adonis-binding-resolver')\nconst Ioc = require('adonis-fold').Ioc\nconst resolver = new Resolver(Ioc)\n\nIoc.validateBinding('App/Http/Controllers/HomeController.index') // works fine\nIoc.validateBinding(function () {}) // works fine\nIoc.validateBinding(null) // throws exception\nIoc.validateBinding({}) // throws exception\nIoc.validateBinding('') // throws exception\nIoc.validateBinding('App/Http/Controllers/HomeController') // throws exception, since method is not defined\n```\n\n\n## Resolve Binding\n```javascript\nconst Resolver = require('adonis-binding-resolver')\nconst Ioc = require('adonis-fold').Ioc\nconst resolver = new Resolver(Ioc)\n\nIoc.resolveBinding('App/Http/Controllers/HomeController.index') // returns {instance: HomeController, method: 'index'}\n\nIoc.resolveBinding(function () {}) // returns function () {}\n```\n\n## Execute Binding\n\nExecuting binding will automatically resolve it for you. Just make sure to call `validatingBinding` first.\n\n```javascript\nconst Resolver = require('adonis-binding-resolver')\nconst Ioc = require('adonis-fold').Ioc\nconst resolver = new Resolver(Ioc)\n\nIoc.validateBinding('App/Http/Controllers/HomeController.index') // make sure binding is fine\n\nconst result = Ioc.executeBinding('App/Http/Controllers/HomeController.index')\nconsole.log(result)\n```\n\n\n## Passing Data when executing\n\nYou can also pass data when executing a binding. Data is passed as an array, which is passed as multiple arguments to the resolved method using `apply` method.\n\n```javascript\nconst request = {} // your http request\nconst response = {} // your http response\nconst result = Ioc.executeBinding('App/Http/Controllers/HomeController.index', [request, response])\n```\n\n## Passing custom scope\n\nAt times you may want to override the current instance of a module/class and pass your own custom instance. Same can be done by passing 3rd argument to the `executeBinding` method.\n\n```javascript\nconst modelInstance = {}\nconst result = Ioc.executeBinding('App/Http/Model/Hooks/Password.encrypt', [], modelInstance)\n```\n\n\n## Used By\n\nThis module is used by\n\n1. adonis-framework\n2. adonis-lucid\n3. adonis-redis\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/adonisjs/adonis-binding-resolver.git"
  },
  "scripts": {
    "lint": "standard src/*.js tests/*.js",
    "test": "npm run lint && _mocha tests"
  },
  "standard": {
    "global": [
      "describe",
      "it",
      "before"
    ]
  },
  "version": "1.0.1"
}
